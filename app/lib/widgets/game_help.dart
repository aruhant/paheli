import 'package:auto_size_text/auto_size_text.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:introduction_screen/introduction_screen.dart';
import 'package:paheli/models/user_prefs.dart';
import 'package:paheli/widgets/practice_game.dart';

class GameHelpWidget extends StatefulWidget {
  const GameHelpWidget({Key? key}) : super(key: key);

  @override
  GameHelpWidgetState createState() => GameHelpWidgetState();
}

class GameHelpWidgetState extends State<GameHelpWidget> {
  final introKey = GlobalKey<IntroductionScreenState>();

  void _onIntroEnd(context) {
    UserPrefs.instance.firstRunDone();
    Navigator.of(context).pushReplacement(
      MaterialPageRoute(builder: (_) => const PracticeGame()),
    );
  }

  Widget _buildFullscreenImage() {
    return Image.asset(
      'assets/fullscreen.jpg',
      fit: BoxFit.cover,
      height: double.infinity,
      width: double.infinity,
      alignment: Alignment.center,
    );
  }

  Widget _buildImage(String assetName, [double width = 350]) {
    return Image.asset('assets/$assetName', width: width);
  }

  @override
  Widget build(BuildContext context) {
    const bodyStyle = TextStyle(fontSize: 19.0);

    const pageDecoration = PageDecoration(
      titleTextStyle: TextStyle(fontSize: 20.0, fontWeight: FontWeight.w700),
      bodyTextStyle: bodyStyle,
      // bodyPadding: EdgeInsets.all(20),
      // contentMargin: EdgeInsets.all(20),
      bodyAlignment: Alignment.centerLeft,
      pageColor: Colors.white,
      imagePadding: EdgeInsets.all(16),
    );

    return IntroductionScreen(
      key: introKey,

      globalBackgroundColor: Colors.white,
      allowImplicitScrolling: true,
      autoScrollDuration: null,
      // globalHeader: Align(
      //   alignment: Alignment.topRight,
      //   child: SafeArea(
      //     child: Padding(
      //       padding: const EdgeInsets.only(top: 16, right: 16),
      //       child: _buildImage('flutter.png', 100),
      //     ),
      //   ),
      // ),
      pages: [
        PageViewModel(
          title:
              "‡§∏‡§Ç‡§µ‡§∞‡•ç‡§ó‡§®‡•Ä ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à, ‡§Ü‡§á‡§è ‡§ú‡§æ‡§®‡•á‡§Ç ‡§á‡§∏ ‡§¶‡§ø‡§≤‡§ö‡§∏‡•ç‡§™ ‡§ñ‡•á‡§≤ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç‡•§",
          body:
              "‡§á‡§∏ ‡§ñ‡•á‡§≤ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§Æ‡•á‡§Ç ‡§è‡§ï 2-‡§∏‡•á-5 ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡§æ ‡§∂‡§¨‡•ç‡§¶ ‡§¨‡•Å‡§ù‡§æ‡§®‡§æ ‡§π‡•à‡•§",
          image: _buildImage('icon.png'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title:
              "‡§á‡§∏ ‡§ñ‡•á‡§≤ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§Æ‡•á‡§Ç 2-5 ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡§æ ‡§∂‡§¨‡•ç‡§¶ ‡§¨‡•Å‡§ù‡§æ‡§®‡§æ ‡§π‡•à‡•§",
          body:
              "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§â‡§§‡•ç‡§§‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§Ü‡§™‡§ï‡•ã ‡§™‡§§‡§æ ‡§ö‡§≤‡•á‡§ó‡§æ ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•á ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§ï‡•å‡§® ‡§∏‡•á ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§∏‡§π‡•Ä ‡§π‡•à‡§Ç",
          image: _buildImage('intro1.png'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title:
              "‡§ñ‡•á‡§≤ ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§á‡§∏ ‡§∏‡§Ç‡§ï‡•á‡§§‡§ø‡§ï‡§æ ‡§ï‡•ã ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™ ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§õ‡•Ç ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç",
          bodyWidget: AutoSizeText(
            "üü• ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§∏‡§π‡•Ä ‡§â‡§§‡•ç‡§§‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡§π‡•Ä‡§Ç ‡§≠‡•Ä ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç\nüü© ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§Ö‡§™‡§®‡•á ‡§∏‡§π‡•Ä ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§π‡•à‡§Ç\nüüß ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§Ö‡§™‡§®‡•á ‡§∏‡§π‡•Ä ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç",
            style: TextStyle(fontSize: 60),
            maxLines: 3,
            maxFontSize: 60,
            minFontSize: 5,
            textAlign: TextAlign.left,
          ),
          // "‡§ú‡•à‡§∏‡§æ ‡§ï‡§ø ‡§π‡§Æ ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§ú‡§ø‡§∏ ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡§æ ‡§π‡§Æ‡•á‡§Ç ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§π‡•à ‡§â‡§∏‡§Æ‡•á‡§Ç 2 ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§π‡•à‡§Ç; ‡§¶‡•Ç‡§∏‡§∞‡•á ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§è‡§ï ‡§Æ‡§Ç‡§§‡•ç‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§≠‡•Ä ‡§π‡•à; ‡§§‡•Ä‡§∏‡§∞‡•á ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§ï‡•Å‡§õ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§ß‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ - 's' ‡§π‡•à‡•§",
          image: _buildImage('intro2.png'),
          decoration: pageDecoration,
        ), /*
        PageViewModel(
          title: "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§™‡§π‡§≤‡§æ ‡§â‡§§‡•ç‡§§‡§∞ :-",
          body:
              "‡§Ö‡§¨ ‡§π‡§Æ‡•á‡§Ç 4 ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§µ‡§æ‡§≤‡•á ‡§è‡§ï ‡§µ‡•à‡§ß ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§≤‡§ó‡§æ‡§®‡§æ ‡§π‡•à‡•§ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§Ç ‡§ï‡§ø ‡§π‡§Æ‡§æ‡§∞‡•á ‡§â‡§§‡•ç‡§§‡§∞ ‡§Æ‡•á‡§Ç ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§î‡§∞ ‡§Ü‡§ß‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§π‡•ã‡§®‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§∞‡§ñ‡•á‡§Ç ‡§ï‡§ø ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡•á‡§Ç ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§î‡§∞ ‡§Ü‡§ß‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§π‡•ã‡§ó‡§æ‡•§ ‡§Ö‡§≠‡•Ä, ‡§Ø‡§π ‡§∏‡§Æ‡§ù‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡•á‡§Ç ‡§ï‡•å‡§® ‡§∏‡•á ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à‡§Ç, ‡§Ü‡§á‡§è ‡§è‡§ï ‡§ö‡§æ‡§∞ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§µ‡§æ‡§≤‡•á ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç - - '‡§∏‡§§‡§ø‡§Ø‡§æ‡§®‡§æ'",
          image: _buildImage('img4.jpg'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title: "red coloured 's'",
          body:
              "‡§ú‡•à‡§∏‡§æ ‡§ï‡§ø ‡§π‡§Æ ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç 's' ‡§ï‡•ã ‡§≤‡§æ‡§≤ ‡§∞‡§Ç‡§ó ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à - ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§π‡•à ‡§ï‡§ø ‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡•á‡§Ç 's' ‡§ï‡§æ ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§µ‡•ç‡§Ø‡•Å‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡•á ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡•á '‡§∏‡§æ', '‡§∏‡•Ä, '‡§∏‡•Ç', '‡§∏‡•ã,' '‡§§‡•ç‡§∏‡§æ' ‡§Ü‡§¶‡§ø ‡§â‡§™‡§∏‡•ç‡§•‡§ø‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§",
          image: _buildImage('img5.jpg'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title: "yellow coloured 't'",
          body:
              "'‡§ü‡•Ä' ‡§ï‡•ã ‡§™‡•Ä‡§≤‡•á ‡§∞‡§Ç‡§ó ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Ö‡§∞‡•ç‡§• ‡§π‡•à 't' ‡§Ø‡§æ ‡§á‡§∏‡§ï‡§æ ‡§ï‡•ã‡§à ‡§µ‡•ç‡§Ø‡•Å‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§Æ‡•á‡§Ç ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® ‡§â‡§∏ ‡§§‡•Ä‡§∏‡§∞‡•á ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§®‡§π‡•Ä‡§Ç‡•§",
          image: _buildImage('img5.jpg'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title: "‡§π‡§≤‡•ç‡§ï‡§æ ‡§π‡§∞‡§æ ‡§∞‡§Ç‡§ó 'H'",
          body:
              "'H' ‡§ï‡•ã ‡§π‡§≤‡•ç‡§ï‡•á ‡§π‡§∞‡•á ‡§∞‡§Ç‡§ó ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø '‡§è‡§ö' ‡§Æ‡•å‡§ï‡•á ‡§™‡§∞ ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à, ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§´‡•â‡§∞‡•ç‡§Æ ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø ‡§â‡§∏ ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ 'HI', 'HO', 'HOO' ‡§á‡§§‡•ç‡§Ø‡§æ‡§¶‡§ø ‡§π‡•ã ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡•á ‡§†‡•Ä‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§π‡§æ‡§Ç ‡§¶‡§ø‡§è ‡§ó‡§è ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§î‡§∞ ‡§Ü‡§ß‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§",
          image: _buildImage('img5.jpg'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title: "‡§ó‡§π‡§∞‡§æ ‡§π‡§∞‡§æ '‡§è‡§®'",
          body:
              "'‡§è‡§®' ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡•ã ‡§ó‡§π‡§∞‡•á ‡§π‡§∞‡•á ‡§∞‡§Ç‡§ó ‡§∏‡•á ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø ‡§Ø‡§π ‡§∏‡§π‡•Ä ‡§ú‡§ó‡§π ‡§™‡§∞ ‡§π‡•à ‡§î‡§∞ ‡§∏‡§π‡•Ä ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§",
          image: _buildImage('img5.jpg'),
          decoration: pageDecoration,
        ),
        PageViewModel(
          title: "‡§µ‡§ø‡§ú‡§Ø",
          body:
              "‡§Ö‡§¨, ‡§Ü‡§™‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•Å‡§õ ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•ã ‡§Ø‡§π ‡§¨‡§æ‡§§ ‡§™‡§π‡§≤‡•á ‡§π‡•Ä ‡§Æ‡§ø‡§≤ ‡§ó‡§à ‡§π‡•ã‡§ó‡•Ä‡•§ ‡§π‡§æ‡§Å ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ ‡§Æ‡•á‡§Ç ‡§Ø‡§π ‡§π‡•à - '‡§è‡§¨‡•Ä‡§∏‡•Ä‡§°‡•Ä'",
          image: _buildImage('img5.jpg'),
          decoration: pageDecoration,
        ),*/ /*
        PageViewModel(
          title: "Full Screen Page",
          body:
              "Pages can be full screen as well.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc id euismod lectus, non tempor felis. Nam rutrum rhoncus est ac venenatis.",
          image: _buildFullscreenImage(),
          decoration: pageDecoration.copyWith(
            contentMargin: const EdgeInsets.symmetric(horizontal: 16),
            fullScreen: true,
            bodyFlex: 2,
            imageFlex: 3,
            safeArea: 100,
          ),
        ),
        PageViewModel(
          title: "Another title page",
          body: "Another beautiful body text for this example onboarding",
          image: _buildImage('img2.jpg'),
          footer: ElevatedButton(
            onPressed: () {
              introKey.currentState?.animateScroll(0);
            },
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.lightBlue,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(8.0),
              ),
            ),
            child: const Text(
              'FooButton',
              style: TextStyle(color: Colors.white),
            ),
          ),
          decoration: pageDecoration.copyWith(
            bodyFlex: 6,
            imageFlex: 6,
            safeArea: 80,
          ),
        ),
        PageViewModel(
          title: "Title of last page - reversed",
          bodyWidget: const Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text("Click on ", style: bodyStyle),
              Icon(Icons.edit),
              Text(" to edit a post", style: bodyStyle),
            ],
          ),
          decoration: pageDecoration.copyWith(
            bodyFlex: 2,
            imageFlex: 4,
            bodyAlignment: Alignment.bottomCenter,
            imageAlignment: Alignment.topCenter,
          ),
          image: _buildImage('img1.jpg'),
          reverse: true,
        ),*/
      ],
      onDone: () => _onIntroEnd(context),
      onSkip: () => _onIntroEnd(context), // You can override onSkip callback
      showSkipButton: true,
      skipOrBackFlex: 0,
      nextFlex: 0,
      showBackButton: false,
      //rtl: true, // Display as right-to-left
      back: const Icon(Icons.arrow_back),
      skip: const Text('Skip', style: TextStyle(fontWeight: FontWeight.w600)),
      next: const Icon(Icons.arrow_forward),
      done: const Text('Done', style: TextStyle(fontWeight: FontWeight.w600)),
      curve: Curves.fastLinearToSlowEaseIn,
      controlsMargin: const EdgeInsets.all(16),
      controlsPadding: kIsWeb
          ? const EdgeInsets.all(12.0)
          : const EdgeInsets.fromLTRB(8.0, 4.0, 8.0, 4.0),
      dotsDecorator: const DotsDecorator(
        size: Size(10.0, 10.0),
        color: Color(0xFFBDBDBD),
        activeSize: Size(22.0, 10.0),
        activeShape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(25.0)),
        ),
      ),
      dotsContainerDecorator: const ShapeDecoration(
        color: Colors.black87,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(8.0)),
        ),
      ),
    );
  }
}
